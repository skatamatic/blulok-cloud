version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    volumes:
      - ./backend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_NAME=blulok_dev
      - DB_USER=blulok_user
      - DB_PASSWORD=blulok_password
      - JWT_SECRET=your-super-secure-jwt-secret-key-minimum-32-characters-dev
      - CORS_ORIGINS=http://localhost:3001
      - LOG_LEVEL=debug
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - blulok-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "3001:3001"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - VITE_API_URL=http://localhost:3000
    depends_on:
      - backend
    networks:
      - blulok-network

  mysql:
    image: mysql:8.0
    environment:
      - MYSQL_ROOT_PASSWORD=rootpassword
      - MYSQL_DATABASE=blulok_dev
      - MYSQL_USER=blulok_user
      - MYSQL_PASSWORD=blulok_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
    networks:
      - blulok-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      timeout: 10s
      retries: 5
    networks:
      - blulok-network

volumes:
  mysql_data:
  redis_data:

networks:
  blulok-network:
    driver: bridge
